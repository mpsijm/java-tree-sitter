package com.github.mpsijm.javatreesitter.$languageName;

import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Runtime;

import com.github.mpsijm.javatreesitter.TSLanguage;

/**
 * JNA Wrapper for library <b>lib$languageName.so</b> generated from the $LanguageName grammar.<br>
 */
@Library("treesitter$languageName")
@Runtime(CRuntime.class)
public class TreeSitter$LanguageNameLibrary {
	static {
		String file = TreeSitter$LanguageNameLibrary.class.getResource("lib/linux_x64/libtreesitter$languageName.so").getFile();
		if (file.contains(".jar!"))
			org.bridj.Platform.addEmbeddedLibraryResourceRoot("com/github/mpsijm/javatreesitter/$languagename/lib/");
		else
			BridJ.setNativeLibraryFile("treesitter$languageName", new java.io.File(file));
		BridJ.register();
	}

	public static Pointer<TSLanguage> tree_sitter_$languageName() {
		return (Pointer)Pointer.pointerToAddress(tree_sitter_$languageName$2(), TSLanguage.class);
	}
	@Ptr
	@Name("tree_sitter_$languageName")
	protected native static long tree_sitter_$languageName$2();
}
