<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.github.mpsijm</groupId>
    <artifactId>java-tree-sitter-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>java-tree-sitter</artifactId>
  <packaging>jar</packaging>

  <name>java-tree-sitter</name>
  <url>https://github.com/mpsijm/java-tree-sitter</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.nativelibs4java</groupId>
      <artifactId>jnaerator</artifactId>
      <version>0.12</version>
    </dependency>
    <dependency>
      <groupId>com.nativelibs4java</groupId>
      <artifactId>bridj</artifactId>
      <version>0.7.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- This plugin creates the output directory for the libtreesitter.so file -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}/classes/com/github/mpsijm/javatreesitter/lib/linux_x64"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin executes gcc to generate libtreesitter.so and runs JNAerator to generate Java interfaces -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>Generate libtreesitter.so</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <workingDirectory>${project.basedir}/../core</workingDirectory>
              <executable>gcc</executable>
              <arguments>
                <argument>lib/src/lib.c</argument>
                <argument>-Ilib/include/</argument>
                <argument>-Ilib/src/</argument>
                <argument>-std=c99</argument>
                <argument>-Wno-unused-variable</argument>
                <argument>-shared</argument>
                <argument>-fPIC</argument>
                <argument>-o</argument>
                <!-- Library locations defined at https://code.google.com/archive/p/bridj/wikis/LibrariesLookup.wiki -->
                <!-- TODO multi-arch -->
                <argument>
                  ${project.build.directory}/classes/com/github/mpsijm/javatreesitter/lib/linux_x64/libtreesitter.so
                </argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>Run JNAerator</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.ochafik.lang.jnaerator.JNAerator</mainClass>
              <arguments>
                <!--<argument>-v</argument>-->
                <argument>-f</argument>
                <argument>-mode</argument>
                <argument>Directory</argument>
                <argument>-library</argument>
                <argument>JavaTreeSitter</argument>
                <argument>-o</argument>
                <argument>${project.build.directory}/generated-sources/tree-sitter</argument>
                <argument>-runtime</argument>
                <argument>BridJ</argument>
                <argument>-rootPackage</argument>
                <argument>com.github.mpsijm</argument>
                <argument>-forceStringSignatures</argument>
                <!-- These header files will be converted to Java interfaces -->
                <argument>${project.basedir}/../core/lib/include/tree_sitter/api.h</argument>
                <argument>${project.basedir}/../core/lib/include/tree_sitter/parser.h</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>Update @Library annotation of JavaTreeSitterLibrary</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- Tiny hack: instead of calling `sed` directly, pass the command to `bash` to allow *-globbing -->
              <executable>bash</executable>
              <arguments>
                <argument>-c</argument>
                <!-- @formatter:off -->
                <argument>
                  sed -i.bak '
                  s/Library("JavaTreeSitter")/Library("treesitter")/
                  s/BridJ.register/String file = JavaTreeSitterLibrary.class.getResource("lib\/linux_x64\/libtreesitter.so").getFile();\
		if (file.contains(".jar!"))\
			org.bridj.Platform.addEmbeddedLibraryResourceRoot("com\/github\/mpsijm\/javatreesitter\/lib\/");\
		else\
			BridJ.setNativeLibraryFile("treesitter", new java.io.File(file));\
		BridJ.register/
                  ' ${project.build.directory}/generated-sources/tree-sitter/com/github/mpsijm/javatreesitter/*.java
                </argument>
                <!-- @formatter:on -->
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/tree-sitter</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
